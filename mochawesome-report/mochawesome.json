{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2018-10-24T09:55:33.949Z",
    "end": "2018-10-24T09:56:04.864Z",
    "duration": 30915,
    "testsRegistered": 4,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "warning",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "271d700b-ed6f-45a1-ac45-b91d5990de08",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [
      {
        "title": "\"before all\" hook",
        "fullTitle": "\"before all\" hook",
        "timedOut": false,
        "duration": 1328,
        "pass": false,
        "fail": false,
        "pending": false,
        "code": "global.expect = expect;\nglobal.browser = await puppeteer.launch(opts);",
        "err": {},
        "isRoot": true,
        "uuid": "ca093b09-bdec-4d2e-981c-5dea27e51761",
        "isHook": true,
        "skipped": false
      }
    ],
    "afterHooks": [
      {
        "title": "\"after all\" hook",
        "fullTitle": "\"after all\" hook",
        "timedOut": false,
        "duration": 92,
        "pass": false,
        "fail": false,
        "pending": false,
        "code": "browser.close();\nsetTimeout( () => { cmd.run('node server.js');}, 5000)\nsetTimeout(() => {opn('http://localhost:9988');}, 2000);\n // open('./mochawesome-report/mochawesome.html');\nglobal.browser = globalVariables.browser;\nglobal.expect = globalVariables.expect;",
        "err": {},
        "isRoot": true,
        "uuid": "d3b0ec96-6b24-428a-af9a-656f5e671b40",
        "isHook": true,
        "skipped": false
      }
    ],
    "tests": [],
    "suites": [
      {
        "uuid": "f8df6df7-6f66-44d4-bb02-80846dffc827",
        "title": "simple test for fv main console",
        "fullFile": "/Users/tariqulislam/Development/node-playground/puppeteer-mocha-automated-testing/test/sample.spec.js",
        "file": "/test/sample.spec.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "simple test for fv main console \"before all\" hook",
            "timedOut": false,
            "duration": 2086,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "page = await browser.newPage();\nawait page.goto(\"http://localhost:2000/\");\nawait page.setViewport( { width: 1366, height: 786});",
            "err": {},
            "isRoot": false,
            "uuid": "6b3676b7-491e-407e-9f97-90c813221ae9",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "simple test for fv main console \"after all\" hook",
            "timedOut": false,
            "duration": 122,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "await page.close();",
            "err": {},
            "isRoot": false,
            "uuid": "6b8881cc-ae4b-4497-a7dc-0745244f234a",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "should show the error message when login with invalid credentials",
            "fullTitle": "simple test for fv main console should show the error message when login with invalid credentials",
            "timedOut": false,
            "duration": 11250,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const emailInput = \"input[type=email]\";\nconst passwordInput = \"input[type=password]\";\nconst submitSelector = \"button[type=submit]\";\n \n linkEmail = await page.$(emailInput);\n linkPassword = await page.$(passwordInput);\n linkSubmit = await page.$(submitSelector);\n await linkEmail.click({ clickCount: 3 });\n await linkEmail.type('admin@fff.com'); // add the email address for linkedin //\n await linkPassword.click({ clickCount: 3});\n await linkPassword.type('dddd'); // add password for linkedin account\n await linkSubmit.click();\n // await page.click(); \n //await page.waitForNavigation(); \n await page.waitFor(3000);\n let errorMessage = await page.evaluate(() => {\n     let selector = \"ul > li\";\n     let errMsg = document.querySelector(selector).innerText;\n     return errMsg;\n });\n const expectedErrorMessage = \"You have provided an incorrect email/username and/or password or maybe you are not in our system.\";\n expect(expectedErrorMessage).to.eql(errorMessage);\n await page.waitFor(3000);",
            "err": {},
            "isRoot": false,
            "uuid": "ac268fa8-9045-472d-a650-76e81a1e5dc7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should successfull login and redirect to home page",
            "fullTitle": "simple test for fv main console should successfull login and redirect to home page",
            "timedOut": false,
            "duration": 12272,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const emailInput = \"input[type=email]\";\nconst passwordInput = \"input[type=password]\";\nconst submitSelector = \"button[type=submit]\";\n \n linkEmail = await page.$(emailInput);\n linkPassword = await page.$(passwordInput);\n linkSubmit = await page.$(submitSelector);\n await linkEmail.click({ clickCount: 3 });\n await linkEmail.type('admin.test@futurevaultinc.com'); // add the email address for linkedin //\n await linkPassword.click({ clickCount: 3});\n await linkPassword.type('Pass1234'); // add password for linkedin account\n await linkSubmit.click();\n // await page.click(); \n await page.waitForNavigation(); \n await page.waitFor(3000);",
            "err": {},
            "isRoot": false,
            "uuid": "01daf718-09bf-47de-969b-24896d4add7b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should select the sponsor from top nav bar",
            "fullTitle": "simple test for fv main console should select the sponsor from top nav bar",
            "timedOut": false,
            "duration": 3111,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "await page.evaluate(() => {\n    document.querySelector('#TopNavigationRow > div > div.navbar-nav > select > option:nth-child(3)').selected = true;\n    var element = document.querySelector('#TopNavigationRow > div > div.navbar-nav > select');\n    var event = new Event('change', {bubbles: true});\n    event.simulated=true;\n    element.dispatchEvent(event);\n});\nawait page.waitFor(3000);",
            "err": {},
            "isRoot": false,
            "uuid": "0338f47a-0a1e-4852-b038-ee81e1c15f0a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should show the details page when select vault holder \"Details\" button from list",
            "fullTitle": "simple test for fv main console should show the details page when select vault holder \"Details\" button from list",
            "timedOut": false,
            "duration": 630,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "const selector = \"#root > div > div.container-fluid > div > div.col-sm-9.col-sm-offset-3.col-md-10.col-md-offset-2.main > div > div > div.row > div:nth-child(2) > div > table > tbody > tr:nth-child(1) > td:nth-child(10) > button\";\nconst detailsButton = await page.$(selector);\nawait detailsButton.click();\n        // await page.waitForNavigation();\n        // await page.waitForResponse();\n        const checkDetailsLoadSuccess = await page.evaluate(() => {\n   const selector = \"#root > div > div.container-fluid > div > div.col-sm-9.col-sm-offset-3.col-md-10.col-md-offset-2.main > div > div > div > div:nth-child(4) > h4\";\n   const msg = document.querySelector(selector).innerText;\n   return msg;\n        });\n        const mesg = \"Basic Information\";\n        expect(mesg).to.eql(checkDetailsLoadSuccess)\n        await page.waitFor(3000);",
            "err": {
              "message": "Error: Evaluation failed: TypeError: Cannot read property 'innerText' of null\n    at __puppeteer_evaluation_script__:3:57",
              "estack": "Error: Evaluation failed: TypeError: Cannot read property 'innerText' of null\n    at __puppeteer_evaluation_script__:3:57\n    at ExecutionContext.evaluateHandle (/Users/tariqulislam/Development/node-playground/node_modules/puppeteer/lib/ExecutionContext.js:106:13)\n    at <anonymous>\n  -- ASYNC --\n    at ExecutionContext.<anonymous> (/Users/tariqulislam/Development/node-playground/node_modules/puppeteer/lib/helper.js:144:27)\n    at ExecutionContext.evaluate (/Users/tariqulislam/Development/node-playground/node_modules/puppeteer/lib/ExecutionContext.js:58:31)\n    at ExecutionContext.<anonymous> (/Users/tariqulislam/Development/node-playground/node_modules/puppeteer/lib/helper.js:145:23)\n    at Frame.evaluate (/Users/tariqulislam/Development/node-playground/node_modules/puppeteer/lib/FrameManager.js:439:20)\n    at <anonymous>\n  -- ASYNC --\n    at Frame.<anonymous> (/Users/tariqulislam/Development/node-playground/node_modules/puppeteer/lib/helper.js:144:27)\n    at Page.evaluate (/Users/tariqulislam/Development/node-playground/node_modules/puppeteer/lib/Page.js:728:43)\n    at Page.<anonymous> (/Users/tariqulislam/Development/node-playground/node_modules/puppeteer/lib/helper.js:145:23)\n    at Context.it (test/sample.spec.js:85:52)\n    at <anonymous>"
            },
            "isRoot": false,
            "uuid": "5bc1219a-502e-4bd6-81c8-61574f82abc7",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "ac268fa8-9045-472d-a650-76e81a1e5dc7",
          "01daf718-09bf-47de-969b-24896d4add7b",
          "0338f47a-0a1e-4852-b038-ee81e1c15f0a"
        ],
        "failures": [
          "5bc1219a-502e-4bd6-81c8-61574f82abc7"
        ],
        "pending": [],
        "skipped": [],
        "duration": 27263,
        "root": false,
        "rootEmpty": false,
        "_timeout": 0
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 0
  },
  "copyrightYear": 2018
}
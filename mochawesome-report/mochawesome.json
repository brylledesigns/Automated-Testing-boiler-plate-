{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2018-10-25T06:02:26.632Z",
    "end": "2018-10-25T06:03:16.468Z",
    "duration": 49836,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "b5f45a11-8a65-4d7b-ac3e-24ab34a16dab",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [
      {
        "title": "\"before all\" hook",
        "fullTitle": "\"before all\" hook",
        "timedOut": false,
        "duration": 21225,
        "pass": false,
        "fail": false,
        "pending": false,
        "code": "global.expect = expect;\nglobal.browser = await puppeteer.launch(opts);",
        "err": {},
        "isRoot": true,
        "uuid": "12e7a8be-39cc-49bc-9eed-4b1d4f4aaa01",
        "isHook": true,
        "skipped": false
      }
    ],
    "afterHooks": [
      {
        "title": "\"after all\" hook",
        "fullTitle": "\"after all\" hook",
        "timedOut": false,
        "duration": 132,
        "pass": false,
        "fail": false,
        "pending": false,
        "code": "browser.close();\nsetTimeout( () => { cmd.run('node server.js');}, 5000)\nsetTimeout(() => {opn('http://localhost:9988');}, 2000);\n // open('./mochawesome-report/mochawesome.html');\nglobal.browser = globalVariables.browser;\nglobal.expect = globalVariables.expect;",
        "err": {},
        "isRoot": true,
        "uuid": "72964ae9-daee-4fb5-ad00-7c7c32dcf11e",
        "isHook": true,
        "skipped": false
      }
    ],
    "tests": [],
    "suites": [
      {
        "uuid": "1d280203-838f-4fff-ae45-be1c6a67908b",
        "title": "simple test for fv main console",
        "fullFile": "/Users/tariqulislam/Development/node-playground/puppeteer-mocha-automated-testing/test/sample.spec.js",
        "file": "/test/sample.spec.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "simple test for fv main console \"before all\" hook",
            "timedOut": false,
            "duration": 9889,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "page = await browser.newPage();\nawait page.goto(\"https://www.linkedin.com/\");\nawait page.setViewport( { width: 1920, height: 1040} );",
            "err": {},
            "isRoot": false,
            "uuid": "1cc63f27-30e1-40e1-84be-1553766bd896",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "simple test for fv main console \"after all\" hook",
            "timedOut": false,
            "duration": 751,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "await page.close();",
            "err": {},
            "isRoot": false,
            "uuid": "29d5e278-8e58-4e83-887f-b39caf355d5f",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "should login to home page",
            "fullTitle": "simple test for fv main console should login to home page",
            "timedOut": false,
            "duration": 17801,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const emailInput = \"#login-email\";\nconst passwordInput = \"#login-password\";\nconst submitSelector = \"#login-submit\";\n \n linkEmail = await page.$(emailInput);\n linkPassword = await page.$(passwordInput);\n linkSubmit = await page.$(submitSelector);\n await linkEmail.click({ clickCount: 3 });\n await linkEmail.type('tariqul.islam.rony@gmail.com'); // add the email address for linkedin //\n await linkPassword.click({ clickCount: 3});\n await linkPassword.type('programmerrony01'); // add password for linkedin account\n await linkSubmit.click();\n await page.waitForNavigation();\n await page.waitFor(3000);",
            "err": {},
            "isRoot": false,
            "uuid": "a78391ba-acb2-4872-8044-6599390c6b3a",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "a78391ba-acb2-4872-8044-6599390c6b3a"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 17801,
        "root": false,
        "rootEmpty": false,
        "_timeout": 0
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 0
  },
  "copyrightYear": 2018
}